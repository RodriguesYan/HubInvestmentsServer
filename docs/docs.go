// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "HubInvestments Development Team",
            "email": "support@hubinvestments.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/getAucAggregation": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve aggregated position data including total invested, current total, and detailed breakdown by category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Positions"
                ],
                "summary": "Get Position Aggregation",
                "responses": {
                    "200": {
                        "description": "Position aggregation retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.PositionAggregationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/getBalance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the available balance for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get User Balance",
                "responses": {
                    "200": {
                        "description": "Balance retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.BalanceResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/getPortfolioSummary": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve complete portfolio summary including balance, total portfolio value, and position aggregation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get Portfolio Summary",
                "responses": {
                    "200": {
                        "description": "Portfolio summary retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.PortfolioSummaryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user with email and password, returns JWT token on success",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.LoginModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/login.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Token generation failed",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.AssetsModel": {
            "description": "Individual asset information in a user's portfolio",
            "type": "object",
            "properties": {
                "averagePrice": {
                    "type": "number",
                    "example": 150
                },
                "category": {
                    "type": "integer",
                    "example": 1
                },
                "currentPrice": {
                    "type": "number",
                    "example": 155
                },
                "quantity": {
                    "type": "number",
                    "example": 10
                },
                "symbol": {
                    "type": "string",
                    "example": "AAPL"
                }
            }
        },
        "domain.AucAggregationModel": {
            "description": "Complete position aggregation response",
            "type": "object",
            "properties": {
                "currentTotal": {
                    "type": "number",
                    "example": 12000
                },
                "positionAggregation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.PositionAggregationModel"
                    }
                },
                "totalInvested": {
                    "type": "number",
                    "example": 11500
                }
            }
        },
        "domain.BalanceModel": {
            "description": "User balance information",
            "type": "object",
            "properties": {
                "availableBalance": {
                    "type": "number",
                    "example": 15000.5
                }
            }
        },
        "domain.PositionAggregationModel": {
            "description": "Position aggregation grouped by asset category",
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.AssetsModel"
                    }
                },
                "category": {
                    "type": "integer",
                    "example": 1
                },
                "currentTotal": {
                    "type": "number",
                    "example": 6750
                },
                "pnl": {
                    "type": "number",
                    "example": 250
                },
                "pnlPercentage": {
                    "type": "number",
                    "example": 3.85
                },
                "totalInvested": {
                    "type": "number",
                    "example": 6500
                }
            }
        },
        "login.LoginModel": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "login.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "response.BalanceResponse": {
            "description": "User balance information",
            "type": "object",
            "properties": {
                "availableBalance": {
                    "type": "number",
                    "example": 15000.5
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Missing authorization header"
                }
            }
        },
        "response.PortfolioSummaryResponse": {
            "description": "Complete portfolio summary including balance and positions",
            "type": "object",
            "properties": {
                "Balance": {
                    "$ref": "#/definitions/domain.BalanceModel"
                },
                "LastUpdatedDate": {
                    "type": "string",
                    "example": ""
                },
                "PositionAggregation": {
                    "$ref": "#/definitions/domain.AucAggregationModel"
                },
                "TotalPortfolio": {
                    "type": "number",
                    "example": 17000
                }
            }
        },
        "response.PositionAggregationResponse": {
            "description": "Complete position aggregation response",
            "type": "object",
            "properties": {
                "currentTotal": {
                    "type": "number",
                    "example": 12000
                },
                "positionAggregation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.PositionAggregationModel"
                    }
                },
                "totalInvested": {
                    "type": "number",
                    "example": 11500
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "192.168.0.6:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "HubInvestments API",
	Description:      "HubInvestments is a comprehensive financial investment platform API that provides portfolio management, market data access, and user authentication.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
